{
    "Metadata": {
        "AWS::CloudFormation::Interface": {
         "ParameterGroups": [
          {
           "Label": {
            "default": "ENVIRONMENT OPTIONS"
           },
           "Parameters": [
            "pBaselineCompliance",
            "DeployDemoApps",
            "pVdssVpcCidr",
            "pAppVpcCidr",
            "pFargateVpcCidr"
           ]
          },
          {
           "Label": {
            "default": "INSTANCE CONFIGURATION"
           },
           "Parameters": [
            "instanceTypeExternalTier",
            "instanceTypeInternalTier",
            "sshKey"
           ]
          },
          {
            "Label": {
             "default": "LICENSE KEYS"
            },
            "Parameters": [
             "licenseKey1",
             "licenseKey2",
             "licenseKey3",
             "licenseKey4"
            ]
          },
          {
           "Label": {
            "default": "OTHER"
           },
           "Parameters": [
            "pProject",
            "pQuickstartS3BucketName",
            "pQuickstartS3KeyPrefix"
           ]
          }
         ],
         "ParameterLabels": {
          "pBaselineCompliance": {
            "default": "Baseline Compliance"
           },
           "instanceTypeExternalTier": {
            "default": "Instance Type (External Tier)"
           },
           "instanceTypeInternalTier": {
            "default": "Instance Type (Internal Tier)"
           },
           "sshKey": {
            "default": "SSH Key"
           },
          "licenseKey1": {
           "default": "License Key 1"
          },
          "licenseKey2": {
           "default": "License Key 2"
          },
          "licenseKey3": {
            "default": "License Key 3"
           },
          "licenseKey4": {
           "default": "License Key 4"
          },
          "DeployDemoApps": {
           "default": "Deploy Demo Apps"
          },
          "pVdssVpcCidr": {
           "default": "Security VPC CIDR"
          },
          "pAppVpcCidr": {
            "default": "Demo App 1 VPC CIDR"
           },
          "pFargateVpcCidr": {
            "default": "Demo App 2 VPC CIDR"
          },
          "pProject": {
            "default": "Project Tag"
           },
          "pQuickstartS3BucketName": {
            "default": "S3 Bucket Name"
           },
          "pQuickstartS3KeyPrefix": {
            "default": "S3 Key Prefix"
          }
         }
        },
        "Version": "4.2.0"
       },
  "Conditions": {
    "DeployDemoApps": {
       "Fn::Equals": [
           "Yes",
           {
           "Ref": "DeployDemoApps"
           }
       ]
    },
    "GovCloud": {
      "Fn::Or": [
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "us-gov-west-1"
          ]
        },
        {
          "Fn::Equals": [
            {
              "Ref": "AWS::Region"
            },
            "us-gov-east-1"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "instanceTypeExternalTier": {
        "AllowedValues": [
         "m5.xlarge",
         "m5.2xlarge",
         "m5.4xlarge",
         "m5.large",
         "m5.12xlarge",
         "m4.xlarge",
         "m4.large",
         "m4.4xlarge",
         "m4.2xlarge",
         "m4.16xlarge",
         "m4.10xlarge",
         "m3.xlarge",
         "m3.medium",
         "m3.large",
         "m3.2xlarge",
         "cc2.8xlarge",
         "c5.xlarge",
         "c5.large",
         "c5.4xlarge",
         "c5.9xlarge",
         "c4.xlarge",
         "c4.8xlarge",
         "c4.4xlarge",
         "c4.2xlarge",
         "c3.xlarge",
         "c3.8xlarge",
         "c3.4xlarge",
         "c3.2xlarge",
         "c5n.2xlarge",
         "c5n.4xlarge"
        ],
        "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IP",
        "Default": "c4.xlarge",
        "Description": "Big-IP Tier 1: Size of the F5 BIG-IP Virtual Instance",
        "Type": "String"
       },
    "instanceTypeInternalTier": {
        "AllowedValues": [
         "m5.xlarge",
         "m5.2xlarge",
         "m5.4xlarge",
         "m5.large",
         "m5.12xlarge",
         "m4.xlarge",
         "m4.large",
         "m4.4xlarge",
         "m4.2xlarge",
         "m4.16xlarge",
         "m4.10xlarge",
         "m3.xlarge",
         "m3.medium",
         "m3.large",
         "m3.2xlarge",
         "cc2.8xlarge",
         "c5.xlarge",
         "c5.large",
         "c5.4xlarge",
         "c5.9xlarge",
         "c4.xlarge",
         "c4.8xlarge",
         "c4.4xlarge",
         "c4.2xlarge",
         "c3.xlarge",
         "c3.8xlarge",
         "c3.4xlarge",
         "c3.2xlarge",
         "c5n.2xlarge",
         "c5n.4xlarge"
        ],
        "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IP",
        "Default": "c4.2xlarge",
        "Description": "Big-IP Tier 2: Size of the F5 BIG-IP Virtual Instance",
        "Type": "String"
       },
    "pQuickstartS3BucketName": {
      "Type": "String",
      "Default": "f5-sca-securitystack",
      "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
      "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-).",
      "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
    },
    "pQuickstartS3KeyPrefix": {
      "Type": "String",
      "Default": "master",
      "AllowedPattern": "^[0-9a-zA-Z-/]*$",
      "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
      "Description": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
    },
    "pProject": {
      "Type": "String",
      "Default": "quickstart-f5-scca-security",
      "Description": "Project name to use for tagging"
    },
    "DeployDemoApps": {
        "AllowedValues": [
            "Yes",
            "No"
          ],
          "ConstraintDescription": "Must choose Yes or No",
          "Description": "Choose Yes to have demo apps deployed in connected VPC's",
          "MaxLength": "255",
          "MinLength": "1",
          "Type": "String",
          "Default": "Yes"
    },
    "pVdssVpcCidr": {
      "Type": "String",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Description": "CIDR Block for the VDSS VPC",
      "MaxLength": 18,
      "MinLength": 9
    },
    "pAppVpcCidr": {
      "Type": "String",
      "Default": "10.1.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Description": "CIDR Block for the app VPC. Only used if demo apps are deployed.",
      "MaxLength": 18,
      "MinLength": 9
    },
    "pFargateVpcCidr": {
      "Type": "String",
      "Default": "10.2.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x.",
      "Description": "CIDR Block for the Fargate VPC.  Only used if demo apps are deployed.",
      "MaxLength": 18,
      "MinLength": 9
    },
    "licenseKey1": {
      "AllowedPattern": "([\\x41-\\x5A][\\x41-\\x5A|\\x30-\\x39]{4})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{7})",
      "ConstraintDescription": "Verify your F5 BYOL regkey.",
      "Description": "F5 BYOL license key",
      "MaxLength": "255",
      "MinLength": "1",
      "Type": "String"
    },
    "licenseKey2": {
      "AllowedPattern": "([\\x41-\\x5A][\\x41-\\x5A|\\x30-\\x39]{4})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{7})",
      "ConstraintDescription": "Verify your F5 BYOL regkey.",
      "Description": "F5 BYOL license key",
      "MaxLength": "255",
      "MinLength": "1",
      "Type": "String"
    },
    "licenseKey3": {
      "AllowedPattern": "([\\x41-\\x5A][\\x41-\\x5A|\\x30-\\x39]{4})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{7})",
      "ConstraintDescription": "Verify your F5 BYOL regkey.",
      "Description": "F5 BYOL license key",
      "MaxLength": "255",
      "MinLength": "1",
      "Type": "String"
    },
    "licenseKey4": {
      "AllowedPattern": "([\\x41-\\x5A][\\x41-\\x5A|\\x30-\\x39]{4})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{5})\\-([\\x41-\\x5A|\\x30-\\x39]{7})",
      "ConstraintDescription": "Verify your F5 BYOL regkey.",
      "Description": "F5 BYOL license key",
      "MaxLength": "255",
      "MinLength": "1",
      "Type": "String"
    },
    "pBaselineCompliance": {
      "AllowedValues": [
        "Enterprise",
        "SCCA"
      ],
      "ConstraintDescription": "Choose your baseline compliance posture",
      "Description": "Choose your baseline compliance posture",
      "MaxLength": "255",
      "MinLength": "1",
      "Type": "String"
    },
    "sshKey": {
      "Description": "EC2 SSH Key for BIG-IP and Linux images",
      "Type": "AWS::EC2::KeyPair::KeyName"
    }
  },
  "Resources": {
    "TransitGatewayStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/aws-quickstart-scca-transit-gateway-stack.json"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/TransitGatewayStack"
      }
    },
    "VdssStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/VPC/aws-scca-vdss-stack-singleAZ.json"
        },
        "Parameters": {
          "pTransitGatewayStackName": {
            "Fn::GetAtt": [
              "TransitGatewayStack",
              "Outputs.StackName"
            ]
          },
          "pVdssVpcCidr": {
            "Ref": "pVdssVpcCidr"
          },
          "pAppVpcCidr": {
            "Ref": "pAppVpcCidr"
          },
          "pFargateVpcCidr": {
            "Ref": "pFargateVpcCidr"
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/VdssStack"
      }
    },
    "AppVpcStack": {
      "Condition": "DeployDemoApps",
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/VPC/aws-scca-app-vpc.json"
        },
        "Parameters": {
          "pTransitGatewayStackName": {
            "Fn::GetAtt": [
              "TransitGatewayStack",
              "Outputs.StackName"
            ]
          },
          "pVdssVpcCidr": {
            "Ref": "pVdssVpcCidr"
          },
          "pAppVpcCidr": {
            "Ref": "pAppVpcCidr"
          },
          "pFargateVpcCidr": {
            "Ref": "pFargateVpcCidr"
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/AppVPCStack"
      }
    },
    "DemoApp": {
        "Condition": "DeployDemoApps",
        "Type": "AWS::CloudFormation::Stack",
        "DependsOn": "RouteTableUpdates",
        "Properties": {
          "TemplateURL": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/DemoApp/demoApp.json"
          },
          "Parameters": {
            "sshKey": {
                "Ref": "sshKey"
              },
            "InstanceType": "t2.small",
            "ubuntuVersion": "Ubuntu16",
            "vpcStackName": {
                "Fn::GetAtt": [
                  "AppVpcStack",
                  "Outputs.StackName"
                ]
              },
            "demoAppPrivateIP": {
            "Fn::GetAtt": [
                "AppVpcStack",
                "Outputs.demoAppPrivateIP"
            ]
            }
          },
          "Tags": [
            {
              "Key": "Project",
              "Value": {
                "Ref": "pProject"
              }
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "sccaMainStack/DemoApp"
        }
      },
    "FargateVpcStack": {
      "Condition": "DeployDemoApps",
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/VPC/aws-scca-fargate-vpc.json"
        },
        "Parameters": {
          "pTransitGatewayStackName": {
            "Fn::GetAtt": [
              "TransitGatewayStack",
              "Outputs.StackName"
            ]
          },
          "pVdssVpcCidr": {
            "Ref": "pVdssVpcCidr"
          },
          "pAppVpcCidr": {
            "Ref": "pAppVpcCidr"
          },
          "pFargateVpcCidr": {
            "Ref": "pFargateVpcCidr"
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/FargateVPCStack"
      }
    },
    "fargateDemoApp": {
        "Type": "AWS::CloudFormation::Stack",
        "DependsOn": "FargateVpcStack",
        "Properties": {
            "TemplateURL": {
              "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/fargateDemoApp/fargateDemoApp.json"
            },
            "Parameters": {
                "FG_VPC_StackName": {
                    "Fn::GetAtt": [
                    "FargateVpcStack",
                    "Outputs.StackName"
                    ]
                },
                "ServiceName": "sca-juice-shop",
                "ImageUrl": "bkimminich/juice-shop",
                "ContainerPort": 80,
                "ContainerCpu": 256,
                "ContainerMemory": 512,
                "DesiredCount": 2,
                "Role": ""
            }
        },
        "Metadata": {
            "aws:cdk:path": "sccaMainStack/fargateDemoApp"
            }
    },
    "JumpHostStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/JumpHost/template.json"
        },
        "Parameters": {
          "pVpcStackName": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.StackName"
            ]
          },
          "sshKey": {
            "Ref": "sshKey"
          },
          "SSHLocation": "0.0.0.0/0"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/JumpHostStack"
      }
    },
    "F5ExternalTier": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/template.json"
        },
        "Parameters": {
          "pBaselineCompliance": {
            "Ref": "pBaselineCompliance"
          },
          "pVpcStackName": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.StackName"
            ]
          },
          "restrictedSrcAddressApp": "0.0.0.0/0",
          "licenseKey1": {
            "Ref": "licenseKey1"
          },
          "licenseKey2": {
            "Ref": "licenseKey2"
          },
          "pTier": "Tier1",
          "internalRoutesGWIP": {
            "Fn::GetAtt": [
              "IPSStack",
              "Outputs.IpsExternalInterfaceIPAddress"
            ]
          },
          "demoAppVIP": {
            "Fn::GetAtt": [
                "VdssStack",
                "Outputs.ExternalTierVIP"
              ]
           },
          "extSelfIP": {
            "Fn::GetAtt": [
                "VdssStack",
                "Outputs.extSelfIPExternalTier"
              ]
           },
          "demoAppPoolMember": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.InternalTierVIP"
            ]
          },
          "sshKey": {
            "Ref": "sshKey"
          },
          "instanceType": {
            "Ref": "instanceTypeExternalTier"
           },
          "restrictedSrcAddress": "0.0.0.0/0",
          "declarationUrlrouting": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/atc/as3/mgmt_forwardingVIP.json"
          },
          "declarationUrldemoApp": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/atc/as3/tier1/demoAppVIP-ExternalTier.json"
          },
          "as3rpmUrl": {
            "Fn::Sub": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.13.2/f5-appsvcs-3.13.2-1.noarch.rpm"
           },
         "as3InstallFileUrl": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/atc/as3/install-rpm.sh"
           } 
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/F5ExternalTier"
      }
    },
    "F5InternalTier": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/template.json"

        },
        "Parameters": { 
          "pVpcStackName": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.StackName"
            ]
          },
          "pBaselineCompliance": {
            "Ref": "pBaselineCompliance"
          },
          "restrictedSrcAddressApp": "0.0.0.0/0",
          "licenseKey1": {
            "Ref": "licenseKey3"
          },
          "licenseKey2": {
            "Ref": "licenseKey4"
          },
          "pTier": "Tier2",
          "internalRoutesGWIP": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.InsideSubnetGWIP"
            ]
          },
          "demoAppVIP": {
            "Fn::GetAtt": [
                "VdssStack",
                "Outputs.InternalTierVIP"
              ]
           },
           "extSelfIP": {
            "Fn::GetAtt": [
                "VdssStack",
                "Outputs.extSelfIPInternalTier"
              ]
           },
          "demoAppPoolMember": {
            "Fn::GetAtt": [
              "AppVpcStack",
              "Outputs.demoAppPrivateIP"
            ]
          },
          "sshKey": {
            "Ref": "sshKey"
          },
          "instanceType": {
            "Ref": "instanceTypeInternalTier"
           },
          "restrictedSrcAddress": "0.0.0.0/0",
          "declarationUrlrouting": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/atc/as3/mgmt_forwardingVIP.json"
          },
          "declarationUrldemoApp": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/atc/as3/tier3/demoAppVIP-InternalTier.json"
          },
          "as3rpmUrl": {
            "Fn::Sub": "https://github.com/F5Networks/f5-appsvcs-extension/releases/download/v3.13.2/f5-appsvcs-3.13.2-1.noarch.rpm"
           },
         "as3InstallFileUrl": {
            "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/BIG-IP/atc/as3/install-rpm.sh"
           } 
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/F5InternalTier"
      }
    },
    "IPSStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "TransitGatewayStack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/IPS/template.json"
        },
        "Parameters": {
          "pVpcStackName": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.StackName"
            ]
          },
          "sshKey": {
            "Ref": "sshKey"
          },
          "SSHLocation": "0.0.0.0/0"
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/IPSStack"
      }
    },
    "RouteTableUpdates": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/VPC/route-table-update-post-EC2-builds.json"
        },
        "Parameters": {
          "pVpcStackName": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.StackName"
            ]
          },
          "pIPSStackName": {
            "Fn::GetAtt": [
              "IPSStack",
              "Outputs.StackName"
            ]
          },
          "pBigIPStackNameTier1": {
            "Fn::GetAtt": [
              "F5ExternalTier",
              "Outputs.StackName"
            ]
          },
          "pBigIPStackNameTier2": {
            "Fn::GetAtt": [
              "F5InternalTier",
              "Outputs.StackName"
            ]
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/RouteUpdatesStack"
      }
    },
    "InstallLambda": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/install_lambda.json"
        },
        "Parameters": {
          "pPrefix": {
            "Fn::Sub": "${AWS::StackName}"
          },
          "pLambdaS3BucketName": {
            "Ref": "pQuickstartS3BucketName"
          },
          "pLambdaS3KeyPrefix": {
            "Ref": "pQuickstartS3KeyPrefix"
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/InstallLambdaStack"
      }
    },
    "HAiAppTier1": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/ha_iapp.json"
        },
        "Parameters": {
          "pPrefix": {
            "Fn::Sub": "${AWS::StackName}"
          },
          "pBigIPMgmt": {
            "Fn::GetAtt": [
              "F5ExternalTier",
              "Outputs.Bigip1ManagementEipAddress"
            ]
          },
          "pBigIPRouteTableId": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.VdssDmz1SubnetRouteTable"
            ]
          },
          "pBigIPInterface": "/Common/internal",
          "pBigIPS3Bucket": {
            "Fn::GetAtt": [
              "F5ExternalTier",
              "Outputs.S3BucketName"
            ]
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/InstallLambdaStack"
      }
    },
    "HAiAppTier2": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": "https://${pQuickstartS3BucketName}.s3.amazonaws.com/${pQuickstartS3KeyPrefix}/ha_iapp.json"
        },
        "Parameters": {
          "pPrefix": {
            "Fn::Sub": "${AWS::StackName}"
          },
          "pBigIPMgmt": {
            "Fn::GetAtt": [
              "F5InternalTier",
              "Outputs.Bigip1ManagementEipAddress"
            ]
          },
          "pBigIPRouteTableId": {
            "Fn::GetAtt": [
              "VdssStack",
              "Outputs.VdssDmz2SubnetRouteTable"
            ]
          },
          "pBigIPInterface": "/Common/internal",
          "pBigIPS3Bucket": {
            "Fn::GetAtt": [
              "F5InternalTier",
              "Outputs.S3BucketName"
            ]
          }
        },
        "Tags": [
          {
            "Key": "Project",
            "Value": {
              "Ref": "pProject"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "sccaMainStack/InstallLambdaStack"
      }
    }
  }
}